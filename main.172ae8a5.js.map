{"version":3,"sources":["scripts/main.js"],"names":["searchMethod","appId","units","getSearchMethod","searchTerm","Number","parseInt","searchWeather","fetch","then","result","json","init","resultFromServer","clearWeather","document","querySelector","cloudyWeather","stormWeather","snowWeather","rainWeather","defaultWeather","promoImgs","querySelectorAll","removeClassImg","forEach","img","classList","remove","weather","main","add","weatherDescriptionHeader","weatherTemperature","humidityElement","windSpeed","cityHeader","weatherIcon","weatherContainer","resultDescription","description","src","icon","textContent","charAt","toUpperCase","slice","innerHTML","Math","round","temp","humidity","wind","speed","name","sys","country","style","visibility","weatherSearchBtn","addEventListener","value"],"mappings":";AAAA,aAEA,IAEIA,EAFEC,EAAQ,mCACRC,EAAQ,WAGd,SAASC,EAAgBC,GAErBJ,EADiB,IAAfI,GAAoBC,OAAOC,SAASF,GAAc,KAAOA,EAC5C,MAEA,IAInB,SAASG,EAAcH,GACrBD,EAAgBC,GAEhBI,MAAwDR,kDAAAA,OAAAA,EAAgBI,KAAAA,OAAAA,EAAoBH,WAAAA,OAAAA,EAAeC,WAAAA,OAAAA,IAASO,KAAK,SAAAC,GAChHA,OAAAA,EAAOC,SACbF,KAAK,SAAAC,GACNE,EAAKF,KAIT,SAASE,EAAKC,GACNC,IAAAA,EAAeC,SAASC,cAAc,UACtCC,EAAgBF,SAASC,cAAc,WACvCE,EAAeH,SAASC,cAAc,UACtCG,EAAcJ,SAASC,cAAc,SACrCI,EAAcL,SAASC,cAAc,SACrCK,EAAiBN,SAASC,cAAc,YACxCM,EAAYP,SAASQ,iBAAiB,cAEtCC,EAAiB,WAAMF,OAAAA,EAAUG,QAAQ,SAAAC,GAC7CA,EAAIC,UAAUC,OAAO,aAGff,OAAAA,EAAiBgB,QAAQ,GAAGC,MAC7B,IAAA,QACHN,IACAV,EAAaa,UAAUI,IAAI,UAC3B,MAEG,IAAA,SACHP,IACAP,EAAcU,UAAUI,IAAI,UAC5B,MAEG,IAAA,OACA,IAAA,UACA,IAAA,OACHP,IACAJ,EAAYO,UAAUI,IAAI,UAC1B,MAEG,IAAA,eACHP,IACAN,EAAaS,UAAUI,IAAI,UAC3B,MAEG,IAAA,OACHP,IACAL,EAAYQ,UAAUI,IAAI,UAC1B,MAEF,QACEP,IACAH,EAAeM,UAAUI,IAAI,UAI3BC,IAAAA,EAA2BjB,SAASC,cAAc,gCAClDiB,EAAqBlB,SAASC,cAAc,yBAC5CkB,EAAkBnB,SAASC,cAAc,sBACzCmB,EAAYpB,SAASC,cAAc,wBACnCoB,EAAarB,SAASC,cAAc,yBACpCqB,EAActB,SAASC,cAAc,kBACrCsB,EAAmBvB,SAASC,cAAc,uBAE1CuB,EAAoB1B,EAAiBgB,QAAQ,GAAGW,YAEtDH,EAAYI,IAAM,oCAAsC5B,EAAiBgB,QAAQ,GAAGa,KAAO,OAC3FV,EAAyBW,YAAcJ,EAAkBK,OAAO,GAAGC,cAAgBN,EAAkBO,MAAM,GAC3Gb,EAAmBc,UAAYC,KAAKC,OAAOpC,EAAiBiB,KAAKoB,KAAO,IAAM,KAAO,SACrFhB,EAAgBS,YAAc,sBAAwBK,KAAKC,MAAMpC,EAAiBiB,KAAKqB,UAAY,IACnGhB,EAAUQ,YAAc,WAAaK,KAAKC,MAAMpC,EAAiBuC,KAAKC,OAAS,OAC/EjB,EAAWO,YAAiB9B,GAAAA,OAAAA,EAAiByC,KAASzC,MAAAA,OAAAA,EAAiB0C,IAAIC,SAC3ElB,EAAiBmB,MAAMC,WAAa,UAGtC,IAAMC,EAAmB5C,SAASC,cAAc,wBAEhD2C,EAAiBC,iBAAiB,QAAS,WACnCxD,IAAAA,EAAaW,SAASC,cAAc,0BAA0B6C,MAEhEzD,GACFG,EAAcH","file":"main.172ae8a5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst appId = 'e1893000db0630e29e513dd37ec06b5b';\r\nconst units = 'imperial';\r\nlet searchMethod;\r\n\r\nfunction getSearchMethod(searchTerm) {\r\n  if (searchTerm === 5 && Number.parseInt(searchTerm) + '' === searchTerm) {\r\n    searchMethod = 'zip';\r\n  } else {\r\n    searchMethod = 'q';\r\n  }\r\n}\r\n\r\nfunction searchWeather(searchTerm) {\r\n  getSearchMethod(searchTerm);\r\n\r\n  fetch(`http://api.openweathermap.org/data/2.5/weather?${searchMethod}=${searchTerm}&APPID=${appId}&units=${units}`).then(result => {\r\n    return result.json();\r\n  }).then(result => {\r\n    init(result);\r\n  });\r\n}\r\n\r\nfunction init(resultFromServer) {\r\n  const clearWeather = document.querySelector('.clear');\r\n  const cloudyWeather = document.querySelector('.cloudy');\r\n  const stormWeather = document.querySelector('.storm');\r\n  const snowWeather = document.querySelector('.snow');\r\n  const rainWeather = document.querySelector('.rain');\r\n  const defaultWeather = document.querySelector('.default');\r\n  const promoImgs = document.querySelectorAll('.promo-img');\r\n\r\n  const removeClassImg = () => promoImgs.forEach(img => {\r\n    img.classList.remove('active');\r\n  });\r\n\r\n  switch (resultFromServer.weather[0].main) {\r\n    case 'Clear':\r\n      removeClassImg();\r\n      clearWeather.classList.add('active');\r\n      break;\r\n\r\n    case 'Clouds':\r\n      removeClassImg();\r\n      cloudyWeather.classList.add('active');\r\n      break;\r\n\r\n    case 'Rain':\r\n    case 'Drizzle':\r\n    case 'Mist':\r\n      removeClassImg();\r\n      rainWeather.classList.add('active');\r\n      break;\r\n\r\n    case 'Thunderstorm':\r\n      removeClassImg();\r\n      stormWeather.classList.add('active');\r\n      break;\r\n\r\n    case 'snow':\r\n      removeClassImg();\r\n      snowWeather.classList.add('active');\r\n      break;\r\n\r\n    default:\r\n      removeClassImg();\r\n      defaultWeather.classList.add('active');\r\n      break;\r\n  }\r\n\r\n  const weatherDescriptionHeader = document.querySelector('.weather__description-header');\r\n  const weatherTemperature = document.querySelector('.weather__temperature');\r\n  const humidityElement = document.querySelector('.weather__humidity');\r\n  const windSpeed = document.querySelector('.weather__wind-speed');\r\n  const cityHeader = document.querySelector('.weather__city-header');\r\n  const weatherIcon = document.querySelector('.weather__icon');\r\n  const weatherContainer = document.querySelector('.weather__container');\r\n\r\n  const resultDescription = resultFromServer.weather[0].description;\r\n\r\n  weatherIcon.src = 'http://openweathermap.org/img/wn/' + resultFromServer.weather[0].icon + '.png';\r\n  weatherDescriptionHeader.textContent = resultDescription.charAt(0).toUpperCase() + resultDescription.slice(1);\r\n  weatherTemperature.innerHTML = Math.round((resultFromServer.main.temp - 32) / 1.8) + '&#8451';\r\n  humidityElement.textContent = 'Humidity levels at ' + Math.round(resultFromServer.main.humidity) + '%';\r\n  windSpeed.textContent = 'Wind at ' + Math.round(resultFromServer.wind.speed) + ' m/s';\r\n  cityHeader.textContent = `${resultFromServer.name}, ${resultFromServer.sys.country}`;\r\n  weatherContainer.style.visibility = 'visible';\r\n}\r\n\r\nconst weatherSearchBtn = document.querySelector('.weather__search-btn');\r\n\r\nweatherSearchBtn.addEventListener('click', () => {\r\n  const searchTerm = document.querySelector('.weather__search-input').value;\r\n\r\n  if (searchTerm) {\r\n    searchWeather(searchTerm);\r\n  }\r\n});\r\n"]}